package com.qrencia.subscription.tier;

import java.math.BigDecimal;
import java.util.List;

import com.qrencia.subscription.category.Category;

import jakarta.persistence.*;
import lombok.*;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "Tiers")
public class Tier {
    // Attributes:

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    // tier_id: Integer (Primary Key, Auto-increment)
    private Integer tierId;

    // name: String
    @Column(nullable = false, unique = true)
    private String name;
    
    // price: Decimal
    @Column(nullable = false)
    private BigDecimal price;

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
        name = "Tier_Categories",
        joinColumns = @JoinColumn(name = "tier_id"),
        inverseJoinColumns = @JoinColumn(name = "category_id")
    )
    private List<Category> categories;
    
    // Methods:

    // public Integer getTierId() → Retrieves the ID of the tier.

    // public String getName() → Gets the name of the tier.

    // public BigDecimal getPrice() → Returns the price of the tier.

    // public void setName(String name) → Sets the name of the tier.

    // public void setPrice(BigDecimal price) → Updates the price.

    // public List<Category> getCategories() → Gets the associated categories.

    // public void setCategories(List<Category> categories) → Assigns categories.
    
}
// Note: The methods mentioned in the comments are automatically generated by Lombok's @Data annotation.
// The @Data annotation generates getters, setters, toString, equals, and hashCode methods.