package com.qrencia.subscription.service;

import java.util.List;

import com.qrencia.subscription.category.Category;

import jakarta.persistence.*;
import lombok.*;

@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "Services")
public class Service {

    // Attribuites:

    @Id
    // service_id: Integer (Primary Key, Auto-increment)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer serviceId;

    // name: String
    @Column(nullable = false, unique = true)
    private String name;

    // description: Text    
    @Column(columnDefinition = "TEXT", nullable = false)
    private String description;

    @ManyToMany(mappedBy = "services")
    private List<Category> categories;
    
    // Methods:

    // public Integer getServiceId() → Retrieves the service ID.

    // public String getName() → Gets the service name.

    // public void setName(String name) → Updates the service name.

    // public String getDescription() → Retrieves the description.

    // public void setDescription(String description) → Updates the description.

    // public List<Category> getCategories() → Gets associated categories.

    // public void setCategories(List<Category> categories) → Links categories.

}
// Note: The methods mentioned in the comments are automatically generated by Lombok's @Data annotation.
// The @Data annotation generates getters, setters, toString, equals, and hashCode methods.
// The @Entity annotation indicates that this class is a JPA entity.
// The @Table annotation specifies the table name in the database.  
// The @Column annotation is used to define the properties of the columns in the database.
// The @ManyToMany annotation defines a many-to-many relationship between entities.
// The @JoinTable annotation is used to specify the join table for the many-to-many relationship.
// The @JoinColumn annotation specifies the foreign key column in the join table.
// The @GeneratedValue annotation is used to specify the generation strategy for the primary key.
// The @NoArgsConstructor and @AllArgsConstructor annotations are from Lombok, which automatically generate constructors.
